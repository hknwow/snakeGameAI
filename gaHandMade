from random import randint, choice
import agent
import numpy as np

def fitness(avgScore):

    if avgScore > 150:
        return 99999
    else:
        return avgScore
history = []
params = [] # alpha gamma randomness
for p in range(100):
    params.append( (np.round(np.random.uniform(low=0.00031, high=0.0025),decimals=4),
                    np.round(np.random.uniform(low=0.5, high=1),decimals=2),
                    randint(0,200)) )

for i in range(10):
    rankedParams = []
    for p in params:
        avgScore = agent.train(p[0],p[1],p[2])
        rankedParams.append( (fitness(avgScore), p))
    rankedParams.sort()
    rankedParams.reverse()

    # print( f"=== Gen {rankedParams[0][1]} best params ===" )
    # print(rankedParams[0])

    bestSolutions = rankedParams[:10]
    history.append(bestSolutions)
    elements = []
    for s in bestSolutions:
        elements.append(s[1])

    newGen = []
    for l in range(10):
        e1 = elements[randint(1,len(elements))-1][0] * np.random.uniform(low=0.95, high=1.05)
        e2 = elements[randint(1,len(elements))-1][1] * np.random.uniform(low=0.95, high=1.05)
        e3 = elements[randint(1,len(elements))-1][2] * np.random.uniform(low=0.95, high=1.05)

        newGen.append((e1,e2,e3))
    
    params = newGen
    if i == 9:
        print(history)

# if __name__ == '__main__':
#     fitness()
#     agent.train()